Help: 1,
on: 114,
module: 4,
turtle:: 1,
NAME: 3,
turtle: 349,
DESCRIPTION: 1,
Turtle: 258,
graphics: 9,
is: 452,
a: 812,
popular: 1,
way: 2,
for: 134,
introducing: 1,
programming: 3,
to: 515,
kids.: 1,
It: 4,
was: 2,
part: 8,
of: 749,
the: 1530,
original: 2,
Logo: 2,
language: 1,
developed: 1,
by: 177,
Wally: 1,
Feurzig: 1,
and: 312,
Seymour: 1,
Papert: 1,
in: 240,
1966.: 1,
Imagine: 1,
robotic: 1,
starting: 3,
at: 49,
(0,: 1,
0): 8,
x-y: 1,
plane.: 1,
After: 1,
an: 109,
``import: 1,
turtle``,: 1,
give: 1,
it: 43,
command: 8,
turtle.forward(15),: 1,
moves: 1,
(on-screen!): 1,
15: 3,
pixels: 12,
direction: 60,
facing,: 1,
drawing: 54,
line: 41,
as: 146,
moves.: 1,
Give: 1,
turtle.right(25),: 1,
rotates: 1,
in-place: 1,
25: 1,
degrees: 1,
clockwise.: 1,
By: 6,
combining: 1,
together: 1,
these: 8,
similar: 1,
commands,: 4,
intricate: 1,
shapes: 7,
pictures: 2,
can: 58,
easily: 2,
be: 171,
drawn.: 13,
-----: 1,
turtle.py: 3,
This: 27,
extended: 2,
reimplementation: 1,
from: 102,
Python: 8,
standard: 7,
distribution: 1,
up: 34,
2.5.: 1,
(See:: 1,
http://www.python.org): 1,
tries: 1,
keep: 1,
merits: 1,
(nearly): 1,
100%: 1,
compatible: 5,
with: 160,
it.: 12,
means: 3,
first: 42,
place: 3,
enable: 1,
learning: 1,
programmer: 1,
use: 21,
all: 50,
classes: 1,
methods: 6,
interactively: 2,
when: 21,
using: 13,
within: 5,
IDLE: 5,
run: 4,
-n: 5,
switch.: 1,
Roughly: 1,
has: 15,
following: 25,
features: 2,
added:: 1,
-: 220,
Better: 1,
animation: 13,
movements,: 1,
especially: 1,
turning: 4,
turtle.: 17,
So: 6,
turtles: 19,
more: 17,
used: 41,
visual: 3,
feedback: 1,
instrument: 1,
(beginning): 1,
programmer.: 1,
Different: 6,
shapes,: 3,
gif-images: 1,
user: 7,
defined: 18,
controllable: 1,
among: 1,
them: 1,
compound: 4,
(multicolored): 1,
shapes.: 4,
stretched: 7,
tilted,: 1,
which: 93,
makes: 9,
very: 3,
versatile: 1,
geometrical: 1,
objects.: 2,
Fine: 1,
control: 1,
over: 2,
movement: 1,
screen: 26,
updates: 1,
via: 13,
delay(),: 1,
enhanced: 1,
tracer(): 1,
speed(): 1,
methods.: 1,
Aliases: 1,
most: 3,
commonly: 1,
like: 2,
fd: 11,
forward: 19,
etc.,: 1,
early: 1,
traditions.: 1,
reduces: 1,
boring: 1,
work: 1,
typing: 1,
long: 2,
sequences: 1,
often: 1,
occur: 1,
natural: 2,
kids: 1,
try: 2,
program: 1,
fancy: 1,
their: 3,
encounter: 1,
graphics.: 5,
Turtles: 4,
now: 1,
have: 23,
undo()-method: 1,
configurable: 1,
undo-buffer.: 1,
Some: 1,
simple: 1,
commands/methods: 1,
creating: 1,
event: 45,
driven: 1,
programs: 2,
(mouse-,: 1,
key-,: 1,
timer-events).: 1,
Especially: 1,
useful: 2,
games.: 1,
A: 17,
scrollable: 2,
Canvas: 4,
class.: 2,
The: 32,
default: 31,
needed: 1,
while: 12,
playing: 1,
around: 3,
turtle(s).: 1,
TurtleScreen: 60,
class: 20,
controlling: 1,
background: 4,
color: 44,
or: 298,
image,: 1,
window: 23,
canvas: 38,
size: 44,
other: 22,
properties: 1,
TurtleScreen.: 9,
There: 2,
method,: 7,
setworldcoordinates(),: 1,
install: 1,
coordinate-system: 1,
implementation: 1,
uses: 3,
2-vector: 1,
named: 267,
Vec2D,: 1,
derived: 4,
tuple.: 1,
public,: 1,
so: 6,
imported: 1,
application: 6,
programmer,: 1,
certain: 1,
types: 2,
computations: 1,
compact.: 1,
Appearance: 1,
startup/import: 1,
configured: 2,
turtle.cfg: 1,
configuration: 3,
file.: 2,
mimics: 1,
appearance: 16,
old: 1,
module.: 1,
If: 148,
appropriately: 1,
reads: 1,
docstrings: 3,
docstring: 2,
dictionary: 22,
some: 15,
different: 3,
language,: 1,
supplied: 1,
separately: 1,
replaces: 1,
English: 1,
ones: 1,
those: 3,
read: 1,
in.: 1,
utility: 1,
function: 44,
write_docstringdict(): 1,
write: 2,
(English): 1,
disc,: 1,
serve: 2,
template: 2,
translations.: 1,
Behind: 1,
scenes: 1,
there: 8,
are: 116,
included: 1,
possible: 1,
extensions: 1,
mind.: 1,
These: 1,
will: 86,
commented: 1,
documented: 1,
elsewhere.: 1,
CLASSES: 1,
builtins.Exception(builtins.BaseException): 1,
Terminator: 2,
builtins.object: 9,
Shape: 9,
builtins.tuple(builtins.object): 1,
Vec2D: 2,
tkinter.Frame(tkinter.Widget): 1,
ScrolledCanvas: 2,
TNavigator(builtins.object): 1,
RawTurtle(TPen,: 4,
TNavigator): 4,
TPen(builtins.object): 1,
TurtleScreenBase(builtins.object): 1,
Pen: 1,
=: 196,
Turtle(RawTurtle): 2,
|: 6167,
Pen(shape='classic',: 1,
undobuffersize=1000,: 8,
visible=True): 8,
RawTurtle: 8,
auto-creating: 2,
(scrolled): 2,
canvas.: 36,
When: 2,
object: 31,
created: 2,
method: 13,
called: 16,
automatically: 4,
created.: 2,
Method: 8,
resolution: 8,
order:: 8,
TPen: 4,
TNavigator: 4,
Methods: 27,
here:: 14,
__init__(self,: 8,
shape='classic',: 6,
Initialize: 7,
self.: 9,
See: 12,
help(type(self)): 7,
accurate: 9,
signature.: 9,
----------------------------------------------------------------------: 38,
inherited: 33,
RawTurtle:: 4,
begin_fill(self): 4,
Called: 5,
just: 5,
before: 7,
shape: 61,
filled.: 5,
No: 157,
argument.: 111,
Example: 229,
(for: 266,
instance: 287,
turtle):: 232,
>>>: 1087,
turtle.color("black",: 8,
"red"): 10,
turtle.begin_fill(): 12,
turtle.circle(60): 8,
turtle.end_fill(): 8,
begin_poly(self): 4,
Start: 10,
recording: 20,
vertices: 20,
polygon.: 35,
Current: 10,
position: 48,
point: 42,
turtle.begin_poly(): 4,
clear(self): 6,
Delete: 33,
turtle's: 131,
drawings: 29,
screen.: 14,
Do: 19,
not: 82,
move: 32,
arguments.: 47,
State: 5,
well: 5,
affected.: 5,
Examples: 40,
turtle.clear(): 4,
clearstamp(self,: 4,
stampid): 4,
stamp: 5,
given: 73,
stampid: 10,
Argument:: 73,
integer,: 9,
must: 20,
return: 113,
value: 39,
previous: 8,
stamp(): 18,
call.: 16,
turtle.color("blue"): 8,
astamp: 5,
turtle.stamp(): 8,
turtle.fd(50): 28,
turtle.clearstamp(astamp): 4,
clearstamps(self,: 4,
n=None): 4,
first/last: 5,
n: 39,
stamps.: 10,
Optional: 59,
argument:: 39,
--: 278,
integer: 46,
None,: 13,
delete: 22,
pen's: 21,
stamps,: 5,
else: 11,
if: 103,
>: 5,
0: 44,
stamps: 5,
<: 5,
last: 24,
i: 17,
range(8):: 10,
...: 122,
turtle.stamp();: 4,
turtle.fd(30): 4,
turtle.clearstamps(2): 4,
turtle.clearstamps(-2): 4,
turtle.clearstamps(): 4,
clone(self): 4,
Create: 13,
clone: 10,
same: 13,
position,: 5,
heading: 47,
properties.: 5,
mick):: 5,
mick: 5,
Turtle(): 10,
joe: 15,
mick.clone(): 5,
dot(self,: 4,
size=None,: 4,
*color): 5,
Draw: 25,
dot: 10,
diameter: 10,
size,: 10,
color.: 10,
arguments:: 20,
>=: 7,
1: 43,
(if: 28,
given): 5,
colorstring: 7,
numeric: 7,
tuple: 19,
circular: 5,
given,: 45,
maximum: 12,
pensize+4: 5,
2*pensize: 5,
used.: 12,
turtle.dot(): 4,
turtle.fd(50);: 8,
turtle.dot(20,: 4,
"blue");: 5,
end_fill(self): 4,
Fill: 5,
drawn: 32,
after: 11,
call: 15,
begin_fill().: 5,
end_poly(self): 4,
Stop: 10,
connected: 5,
point.: 7,
turtle.end_poly(): 4,
filling(self): 4,
Return: 258,
fillstate: 5,
(True: 5,
filling,: 5,
False: 28,
else).: 5,
turtle.filling():: 4,
turtle.pensize(5): 4,
else:: 5,
turtle.pensize(3): 4,
get_poly(self): 4,
lastly: 5,
recorded: 5,
p: 5,
turtle.get_poly(): 4,
turtle.register_shape("myFavouriteShape",: 4,
p): 5,
get_shapepoly(self): 4,
current: 134,
polygon: 39,
coordinate: 46,
pairs.: 6,
turtle.shape("square"): 8,
turtle.shapetransform(4,: 4,
-1,: 5,
0,: 10,
2): 5,
turtle.get_shapepoly(): 4,
((50,: 5,
-20),: 5,
(30,: 5,
20),: 10,
(-50,: 5,
(-30,: 5,
-20)): 5,
getpen: 4,
getturtle(self): 8,
getscreen(self): 4,
object,: 10,
on.: 14,
TurtleScreen-methods: 5,
that: 44,
object.: 11,
ts: 10,
turtle.getscreen(): 4,
<turtle.TurtleScreen: 4,
0x0106B770>: 5,
ts.bgcolor("pink"): 5,
Turtleobject: 6,
itself.: 6,
Only: 7,
reasonable: 6,
use:: 6,
'anonymous: 6,
turtle':: 6,
Example:: 96,
pet: 12,
getturtle(): 7,
pet.fd(50): 6,
<turtle.Turtle: 4,
0x0187D810>: 6,
turtles(): 8,
[<turtle.Turtle: 6,
0x0187D810>]: 6,
onclick(self,: 6,
fun,: 18,
btn=1,: 18,
add=None): 20,
Bind: 26,
fun: 48,
mouse-click: 12,
this: 117,
Arguments:: 82,
two: 34,
arguments,: 17,
assigned: 15,
coordinates: 64,
clicked: 19,
btn: 17,
number: 209,
mouse-button: 15,
defaults: 20,
(left: 15,
mouse: 18,
button).: 15,
add: 15,
True: 23,
False.: 11,
True,: 40,
new: 17,
binding: 5,
added,: 5,
otherwise: 10,
replace: 7,
former: 10,
binding.: 5,
anonymous: 5,
turtle,: 8,
i.: 21,
e.: 21,
procedural: 5,
way:: 10,
def: 22,
turn(x,: 5,
y):: 5,
left(360): 5,
onclick(turn): 5,
#: 108,
Now: 5,
clicking: 12,
into: 11,
turn: 10,
onclick(None): 6,
event-binding: 5,
removed: 5,
ondrag(self,: 4,
mouse-move: 5,
Every: 5,
sequence: 5,
mouse-move-events: 5,
preceded: 5,
turtle.ondrag(turtle.goto): 4,
Subsequently: 12,
dragging: 5,
across: 5,
thereby: 5,
producing: 5,
handdrawings: 5,
pen: 56,
down).: 5,
onrelease(self,: 4,
mouse-button-release: 5,
MyTurtle: 5,
joe):: 5,
MyTurtle(Turtle):: 5,
glow(self,x,y):: 5,
self.fillcolor("red"): 5,
unglow(self,x,y):: 5,
self.fillcolor(""): 5,
MyTurtle(): 5,
joe.onclick(joe.glow): 5,
joe.onrelease(joe.unglow): 5,
Clicking: 5,
turns: 10,
fillcolor: 26,
red,: 6,
unclicking: 5,
transparent.: 5,
reset(self): 6,
restore: 10,
its: 51,
values.: 11,
screen,: 7,
re-center: 5,
set: 128,
variables: 13,
turtle.position(): 44,
(0.00,-22.00): 5,
turtle.heading(): 48,
100.0: 5,
turtle.reset(): 4,
(0.00,0.00): 12,
0.0: 9,
settiltangle(self,: 4,
angle): 25,
Rotate: 25,
turtleshape: 66,
specified: 36,
angle: 102,
angle,: 20,
regardless: 10,
tilt-angle.: 15,
DO: 18,
NOT: 27,
change: 28,
(direction: 20,
movement).: 25,
turtle.shape("circle"): 16,
turtle.shapesize(5,2): 16,
turtle.settiltangle(45): 4,
turtle.settiltangle(-45): 4,
setundobuffer(self,: 4,
size): 4,
Set: 134,
disable: 5,
undobuffer.: 15,
None: 34,
empty: 7,
undobuffer: 10,
installed.: 5,
Size: 5,
gives: 8,
turtle-actions: 5,
undone: 5,
undo(): 12,
function.: 13,
no: 58,
present.: 8,
turtle.setundobuffer(42): 4,
shape(self,: 4,
name=None): 4,
name: 61,
/: 5,
shapename.: 5,
string,: 30,
valid: 5,
shapename: 5,
or,: 5,
shape.: 16,
exist: 5,
TurtleScreen's: 8,
dictionary.: 5,
Initially: 5,
shapes:: 5,
'arrow',: 5,
'turtle',: 5,
'circle',: 7,
'square',: 5,
'triangle',: 5,
'classic'.: 5,
To: 11,
learn: 5,
about: 10,
how: 6,
deal: 5,
see: 8,
Screen-method: 5,
register_shape.: 5,
turtle.shape(): 8,
'arrow': 5,
turtle.shape("turtle"): 4,
'turtle': 5,
shapesize(self,: 8,
stretch_wid=None,: 8,
stretch_len=None,: 10,
outline=None): 11,
Set/return: 6,
stretchfactors/outline.: 6,
resizemode: 29,
"user".: 12,
stretch_wid: 12,
:: 93,
positive: 47,
stretch_len: 12,
outline: 24,
attributes: 29,
x/y-stretchfactors: 6,
and/or: 6,
outline.: 12,
only: 8,
"user",: 16,
displayed: 6,
according: 37,
stretchfactors:: 6,
stretchfactor: 17,
perpendicular: 6,
orientation: 42,
orientation.: 11,
determines: 16,
width: 51,
shapes's: 6,
turtle.resizemode("user"): 4,
turtle.shapesize(5,: 4,
5,: 6,
12): 6,
turtle.shapesize(outline=8): 4,
shapetransform(self,: 4,
t11=None,: 4,
t12=None,: 5,
t21=None,: 5,
t22=None): 5,
transformation: 10,
matrix: 15,
t11,: 10,
t12,: 5,
t21,: 10,
t22: 5,
numbers.: 7,
none: 6,
elements: 11,
matrix.: 10,
Otherwise: 5,
transform: 5,
consisting: 5,
row: 14,
t12: 5,
second: 21,
22.: 5,
Modify: 5,
stretchfactor,: 5,
shearfactor: 10,
tiltangle: 5,
turtle.shapesize(4,2): 4,
turtle.shearfactor(-0.5): 4,
turtle.shapetransform(): 4,
(4.0,: 5,
-1.0,: 5,
-0.0,: 5,
2.0): 5,
shearfactor(self,: 4,
shear=None): 4,
shearfactor.: 5,
shear: 25,
number,: 18,
tangent: 15,
Shear: 5,
shear,: 5,
angle.: 10,
given:: 15,
shearfactor,: 5,
lines: 11,
parallel: 5,
sheared.: 5,
turtle.shearfactor(0.5): 4,
turtle.shearfactor(): 4,
0.5: 5,
stamp(self): 4,
Stamp: 10,
copy: 10,
onto: 10,
id.: 5,
position.: 29,
stamp_id: 5,
stamp,: 5,
calling: 8,
clearstamp(stamp_id).: 5,
13: 5,
tilt(self,: 4,
tilt-angle,: 10,
but: 19,
do: 16,
turtle.tilt(30): 8,
tiltangle(self,: 4,
angle=None): 4,
between: 14,
(its: 5,
Deprecated: 5,
since: 5,
3.1: 5,
turtle.tilt(45): 4,
turtle.tiltangle(): 4,
turtlesize: 4,
undo(self): 4,
undo: 15,
(repeatedly): 10,
action.: 10,
Number: 5,
available: 13,
actions: 5,
determined: 5,
range(4):: 5,
turtle.lt(80): 4,
turtle.undo(): 4,
undobufferentries(self): 4,
count: 5,
entries: 5,
undobufferentries():: 5,
write(self,: 4,
arg,: 4,
move=False,: 5,
align='left',: 5,
font=('Arial',: 5,
8,: 5,
'normal')): 5,
Write: 10,
text: 14,
arg: 10,
info,: 5,
written: 6,
(optional): 25,
True/False: 15,
align: 10,
one: 43,
strings: 20,
"left",: 5,
"center": 10,
right": 5,
font: 5,
triple: 5,
(fontname,: 5,
fontsize,: 5,
fonttype): 5,
string: 16,
representation: 5,
("left",: 5,
right"): 5,
font.: 5,
moved: 10,
bottom-right: 5,
corner: 18,
text.: 5,
default,: 5,
turtle.write('Home: 4,
',: 5,
align="center"): 5,
turtle.write((0,0),: 4,
True): 5,
Data: 19,
screens: 4,
[]: 4,
TPen:: 8,
color(self,: 4,
*args): 17,
pencolor: 20,
fillcolor.: 20,
Several: 5,
input: 48,
formats: 15,
allowed.: 5,
They: 5,
1,: 20,
2,: 5,
3: 10,
arguments: 19,
follows:: 5,
color(): 11,
pair: 22,
specification: 25,
returned: 25,
color(colorstring),: 5,
color((r,g,b)),: 5,
color(r,g,b): 5,
inputs: 5,
pencolor,: 15,
both,: 5,
value.: 10,
color(colorstring1,: 5,
colorstring2),: 5,
color((r1,g1,b1),: 5,
(r2,g2,b2)): 5,
equivalent: 6,
pencolor(colorstring1): 5,
fillcolor(colorstring2): 5,
analogously,: 5,
format: 15,
polygon,: 27,
interior: 10,
newly: 15,
colors.: 5,
For: 5,
info: 6,
see:: 5,
turtle.color('red',: 4,
'green'): 10,
turtle.color(): 4,
('red',: 5,
colormode(255): 6,
color((40,: 5,
80,: 5,
120),: 5,
(160,: 5,
200,: 5,
240)): 5,
('#285078',: 5,
'#a0c8f0'): 5,
down: 18,
pendown(self): 12,
fillcolor(self,: 4,
Four: 10,
allowed:: 10,
fillcolor(): 5,
possibly: 10,
hex-number: 10,
(see: 21,
example).: 10,
May: 11,
another: 21,
color/pencolor/fillcolor: 10,
fillcolor(colorstring): 5,
s: 11,
Tk: 14,
such: 14,
"red": 10,
"yellow": 10,
fillcolor((r,: 5,
g,: 62,
b)): 10,
*a: 10,
tuple*: 10,
r,: 42,
b,: 10,
represent,: 10,
RGB: 20,
color,: 20,
each: 22,
b: 33,
range: 41,
0..colormode,: 10,
where: 24,
colormode: 12,
either: 10,
1.0: 20,
255: 12,
fillcolor(r,: 5,
b): 10,
represent: 10,
0..colormode: 12,
turtle.fillcolor('violet'): 4,
col: 5,
turtle.pencolor(): 8,
turtle.fillcolor(col): 4,
turtle.fillcolor(0,: 4,
.5,: 5,
hideturtle(self): 8,
Makes: 12,
invisible.: 6,
Aliases:: 76,
hideturtle: 6,
ht: 10,
It's: 6,
good: 6,
idea: 6,
you're: 6,
middle: 6,
complicated: 6,
drawing,: 8,
because: 6,
hiding: 6,
speeds: 11,
observably.: 6,
turtle.hideturtle(): 12,
isdown(self): 4,
down,: 12,
it's: 10,
up.: 5,
turtle.penup(): 12,
turtle.isdown(): 8,
turtle.pendown(): 8,
isvisible(self): 4,
shown,: 5,
hidden.: 5,
print: 15,
turtle.isvisible():: 4,
pd: 11,
pen(self,: 4,
pen=None,: 4,
**pendict): 5,
attributes.: 5,
below: 10,
listed: 10,
keys.: 6,
**pendict: 5,
keyword-arguments: 5,
keys: 5,
keywords.: 5,
'pen-dictionary': 5,
key/value: 5,
pairs:: 5,
"shown": 5,
"pendown": 5,
"pencolor": 5,
color-string: 10,
color-tuple: 10,
"fillcolor": 5,
"pensize": 5,
"speed": 5,
0..10: 10,
"resizemode": 5,
"auto": 16,
"user": 10,
"noresize": 15,
"stretchfactor":: 5,
(positive: 5,
number): 7,
"shearfactor":: 5,
"outline": 5,
"tilt": 5,
argument: 37,
subsequent: 5,
pen()-call: 5,
pen-state.: 5,
Moreover: 5,
provided: 8,
keyword-arguments.: 5,
several: 9,
statement.: 5,
turtle.pen(fillcolor="black",: 4,
pencolor="red",: 5,
pensize=10): 5,
turtle.pen(): 8,
{'pensize':: 15,
10,: 15,
'shown':: 15,
'resizemode':: 15,
'auto',: 15,
'outline':: 15,
'pencolor':: 15,
'red',: 10,
'pendown':: 15,
'fillcolor':: 15,
'black',: 5,
'stretchfactor':: 15,
(1,1),: 15,
'speed':: 15,
3,: 15,
'shearfactor':: 15,
0.0}: 15,
penstate=turtle.pen(): 4,
turtle.color("yellow",""): 4,
'yellow',: 5,
False,: 5,
'',: 5,
p.pen(penstate,: 5,
fillcolor="green"): 5,
p.pen(): 5,
'green',: 5,
pencolor(self,: 4,
pencolor.: 10,
pencolor(): 7,
pencolor(colorstring): 5,
pencolor((r,: 5,
pencolor(r,: 5,
turtle.pencolor('brown'): 4,
tup: 5,
(0.2,: 5,
0.8,: 5,
0.55): 5,
turtle.pencolor(tup): 4,
'#33cc8c': 5,
Pull: 14,
moving.: 14,
pendown: 7,
pensize(self,: 8,
width=None): 8,
thickness.: 12,
pensize: 12,
thickness: 6,
returned.: 8,
turtle.pensize(): 4,
turtle.pensize(10): 4,
here: 6,
10: 21,
penup(self): 12,
penup: 7,
pu: 11,
resizemode(self,: 4,
rmode=None): 4,
values:: 5,
"auto",: 10,
"noresize".: 5,
(Optional): 5,
rmode: 5,
resizemodes: 5,
effects:: 5,
adapts: 10,
corresponding: 16,
pensize.: 5,
values: 12,
outlinewidth: 5,
(outline),: 5,
shapesize(): 5,
adaption: 5,
takes: 10,
place.: 10,
resizemode.: 5,
resizemode("user"): 7,
shapesize: 5,
turtle.resizemode("noresize"): 4,
turtle.resizemode(): 4,
'noresize': 5,
showturtle(self): 8,
visible.: 6,
showturtle: 6,
st: 10,
turtle.showturtle(): 4,
speed(self,: 4,
speed=None): 4,
speed.: 10,
speed: 20,
speedstring: 5,
below): 5,
..: 8,
10.: 5,
greater: 5,
than: 10,
smaller: 5,
0.5,: 5,
0.: 6,
Speedstrings: 5,
mapped: 5,
speedvalues: 5,
'fastest': 5,
'fast': 5,
'normal': 5,
6: 5,
'slow': 5,
'slowest': 5,
enforce: 5,
increasingly: 5,
faster: 5,
turning.: 5,
Attention:: 5,
*no*: 5,
forward/back: 5,
jump: 5,
likewise: 5,
left/right: 5,
make: 9,
instantly.: 5,
turtle.speed(3): 4,
descriptors: 10,
__dict__: 9,
defined): 16,
__weakref__: 8,
list: 26,
weak: 8,
references: 8,
TNavigator:: 8,
back(self,: 12,
distance): 20,
Move: 50,
backward: 25,
distance.: 13,
back: 8,
bk: 11,
distance: 26,
,opposite: 7,
headed.: 13,
heading.: 12,
(0.00,: 46,
0.00): 32,
turtle.backward(30): 4,
(-30.00,: 7,
circle(self,: 4,
radius,: 4,
extent=None,: 5,
steps=None): 5,
circle: 25,
radius.: 10,
radius: 15,
extent: 20,
steps: 15,
center: 7,
units: 15,
left: 34,
turtle;: 5,
draw: 10,
entire: 5,
circle.: 10,
full: 15,
circle,: 5,
endpoint: 5,
arc: 15,
counterclockwise: 8,
positive,: 7,
clockwise: 7,
direction.: 5,
Finally: 5,
changed: 5,
amount: 5,
extent.: 5,
As: 5,
approximated: 5,
inscribed: 5,
regular: 12,
use.: 6,
calculated: 5,
automatically.: 5,
Maybe: 5,
polygons.: 5,
call:: 25,
circle(radius): 5,
--or:: 62,
circle(radius,: 16,
extent): 5,
extent,: 5,
steps): 5,
steps=6): 5,
6-sided: 5,
turtle.circle(50): 4,
turtle.circle(120,: 4,
180): 5,
semicircle: 5,
degrees(self,: 4,
fullcircle=360.0): 4,
measurement: 20,
degrees.: 10,
fullcircle: 5,
units,: 5,
'degrees': 5,
Default: 7,
360: 5,
turtle.left(90): 4,
90: 28,
Change: 6,
unit: 5,
grad: 5,
(also: 5,
known: 5,
gon,: 5,
grade,: 5,
gradian: 5,
equals: 5,
1/100-th: 5,
right: 31,
angle.): 5,
turtle.degrees(400.0): 4,
100: 5,
distance(self,: 4,
x,: 39,
y=None): 25,
(x,y): 5,
step: 5,
units.: 29,
x: 42,
pair/vector: 17,
numbers: 19,
y: 47,
distance(x,: 11,
y): 25,
distance((x,: 10,
y)): 17,
(tuple): 17,
distance(vec): 10,
e.g.: 19,
pos(): 34,
distance(mypen): 10,
mypen: 10,
turtle.pos(): 28,
turtle.distance(30,40): 4,
50.0: 10,
pen.forward(77): 5,
turtle.distance(pen): 4,
77.0: 5,
forward(self,: 8,
(integer: 34,
float): 34,
distance,: 6,
turtle.forward(25): 4,
(25.00,0.00): 6,
turtle.forward(-75): 4,
(-50.00,0.00): 6,
goto(self,: 12,
absolute: 15,
setpos: 11,
setposition: 11,
goto:: 7,
goto(x,: 8,
goto((x,: 7,
goto(vec): 7,
does: 12,
change.: 7,
tp: 14,
turtle.setpos(60,30): 4,
(60.00,30.00): 7,
turtle.setpos((20,80)): 4,
(20.00,80.00): 7,
turtle.setpos(tp): 4,
heading(self): 4,
turtle.left(67): 4,
67.0: 11,
home(self): 4,
origin: 10,
(0,0).: 5,
(0,0): 5,
start-orientation: 5,
(which: 5,
depends: 17,
mode).: 5,
turtle.home(): 4,
left(self,: 8,
Turn: 24,
lt: 10,
(Units: 12,
degrees,: 12,
degrees(): 12,
radians(): 14,
functions.): 12,
Angle: 12,
mode.: 14,
(See: 17,
this.): 12,
22.0: 12,
turtle.left(45): 4,
pos(self): 8,
location: 7,
(x,y),: 6,
Vec2D-vector.: 6,
pos: 6,
240.00): 16,
radians(self): 4,
radians.: 5,
turtle.radians(): 4,
1.5707963267948966: 5,
right(self,: 8,
rt: 10,
turtle.right(45): 4,
337.0: 6,
seth: 10,
setheading(self,: 8,
to_angle): 8,
to_angle.: 12,
setheading: 6,
to_angle: 6,
Here: 6,
common: 6,
directions: 6,
degrees:: 6,
mode:: 6,
logo-mode:: 6,
-------------------|--------------------: 6,
east: 12,
north: 14,
180: 12,
west: 12,
south: 12,
270: 12,
turtle.setheading(90): 4,
setx(self,: 4,
x): 4,
leave: 5,
unchanged.: 10,
turtle.setx(10): 4,
(10.00,: 10,
sety(self,: 4,
remains: 7,
40.00): 5,
turtle.sety(-10): 4,
-10.00): 5,
towards(self,: 4,
(x,: 5,
y).: 5,
turtle-position: 5,
start: 5,
(Depends: 5,
modes: 5,
"standard": 5,
"logo"): 5,
10.00): 5,
turtle.towards(0,0): 4,
225.0: 5,
xcor(self): 4,
coordinate.: 5,
reset(): 13,
turtle.left(60): 8,
turtle.forward(100): 8,
turtle.xcor(): 4,
ycor(self): 4,
---: 5,
turtle.ycor(): 4,
86.6025403784: 5,
DEFAULT_ANGLEOFFSET: 4,
DEFAULT_ANGLEORIENT: 4,
DEFAULT_MODE: 4,
'standard': 8,
START_ORIENTATION: 4,
{'logo':: 4,
(0.00,1.00),: 4,
'standard':: 4,
(1.00,0.00),: 4,
'wo...: 4,
RawPen: 1,
RawPen(canvas=None,: 1,
Animation: 2,
RawTurtle.: 2,
Puts: 2,
upon: 4,
provides: 2,
tools: 2,
animation.: 2,
canvas=None,: 2,
RawTurtle(canvas=None,: 1,
ScrolledCanvas(tkinter.Frame): 1,
ScrolledCanvas(master,: 1,
width=500,: 2,
height=350,: 2,
canvwidth=600,: 2,
canvheight=500): 2,
Modeled: 1,
scrolled: 1,
Grayons's: 1,
Tkinter: 4,
book.: 1,
Used: 1,
canvas,: 1,
pops: 1,
functions: 1,
tkinter.Frame: 1,
tkinter.Widget: 1,
tkinter.BaseWidget: 1,
tkinter.Misc: 1,
tkinter.Pack: 1,
tkinter.Place: 1,
tkinter.Grid: 1,
master,: 1,
Construct: 1,
frame: 1,
widget: 77,
parent: 6,
MASTER.: 1,
Valid: 3,
resource: 4,
names:: 1,
background,: 4,
bd,: 1,
bg,: 1,
borderwidth,: 1,
class,: 2,
colormap,: 1,
container,: 1,
cursor,: 1,
height,: 1,
highlightbackground,: 1,
highlightcolor,: 1,
highlightthickness,: 1,
relief,: 1,
takefocus,: 1,
visual,: 1,
width.: 1,
addtag(self,: 1,
*args,: 66,
**kw): 81,
addtag_above(self,: 1,
addtag_all(self,: 1,
addtag_below(self,: 1,
addtag_closest(self,: 1,
addtag_enclosed(self,: 1,
addtag_overlapping(self,: 1,
addtag_withtag(self,: 1,
adjustScrolls(self): 1,
Adjust: 2,
scrollbars: 2,
window-: 1,
canvas-size.: 1,
bbox(self,: 1,
'forward': 6,
itself: 6,
inherited...: 6,
bind(self,: 1,
**kwargs): 6,
canvasx(self,: 1,
canvasy(self,: 1,
cget(self,: 2,
config(self,: 1,
coords(self,: 1,
create_arc(self,: 1,
create_bitmap(self,: 1,
create_image(self,: 1,
create_line(self,: 1,
create_oval(self,: 1,
create_polygon(self,: 1,
create_rectangle(self,: 1,
create_text(self,: 1,
create_window(self,: 1,
dchars(self,: 1,
delete(self,: 1,
dtag(self,: 1,
find(self,: 1,
find_above(self,: 1,
find_all(self,: 1,
find_below(self,: 1,
find_closest(self,: 1,
find_enclosed(self,: 1,
find_overlapping(self,: 1,
find_withtag(self,: 1,
focus_force(self): 1,
gettags(self,: 1,
icursor(self,: 1,
index(self,: 2,
insert(self,: 1,
itemcget(self,: 1,
itemconfig(self,: 1,
itemconfigure(self,: 1,
move(self,: 1,
moveto(self,: 1,
onResize(self,: 1,
event): 1,
self-explanatory: 1,
postscript(self,: 1,
reset(self,: 1,
canvwidth=None,: 2,
canvheight=None,: 3,
bg=None): 3,
size.: 1,
scale(self,: 1,
scan_dragto(self,: 1,
scan_mark(self,: 1,
select_adjust(self,: 1,
select_clear(self,: 1,
select_from(self,: 1,
select_item(self,: 1,
select_to(self,: 1,
tag_bind(self,: 1,
tag_lower(self,: 1,
tag_raise(self,: 1,
tag_unbind(self,: 1,
type(self,: 1,
unbind(self,: 1,
xview(self,: 1,
xview_moveto(self,: 1,
xview_scroll(self,: 1,
yview(self,: 1,
yview_moveto(self,: 1,
yview_scroll(self,: 1,
tkinter.BaseWidget:: 1,
destroy(self): 1,
Destroy: 1,
descendants: 1,
widgets.: 1,
tkinter.Misc:: 2,
__getitem__: 1,
key): 5,
KEY: 1,
string.: 3,
__repr__(self): 2,
repr(self).: 3,
__setitem__(self,: 1,
key,: 8,
value): 1,
__str__(self): 1,
path: 1,
widget.: 38,
after(self,: 1,
ms,: 1,
func=None,: 3,
Call: 3,
once: 2,
time.: 1,
MS: 1,
specifies: 12,
time: 1,
milliseconds.: 5,
FUNC: 4,
shall: 1,
called.: 3,
Additional: 2,
parameters: 4,
identifier: 5,
cancel: 2,
scheduling: 3,
after_cancel.: 2,
after_cancel(self,: 1,
id): 1,
Cancel: 1,
identified: 4,
ID.: 3,
Identifier: 1,
after_idle: 1,
parameter.: 2,
after_idle(self,: 1,
func,: 2,
Tcl: 10,
main: 2,
loop: 6,
process.: 1,
anchor: 8,
grid_anchor(self,: 2,
anchor=None): 2,
bell(self,: 1,
displayof=0): 6,
Ring: 1,
display's: 1,
bell.: 1,
bind_all(self,: 1,
sequence=None,: 2,
widgets: 8,
SEQUENCE: 7,
FUNC.: 2,
An: 4,
additional: 4,
boolean: 6,
parameter: 14,
ADD: 2,
whether: 8,
additionally: 2,
bound: 3,
bind: 2,
bind_class(self,: 1,
className,: 2,
bindtag: 2,
CLASSNAME: 2,
bindtags(self,: 1,
tagList=None): 1,
get: 7,
bindtags: 4,
With: 2,
associated: 4,
list.: 1,
determine: 3,
order: 12,
events: 7,
processed: 2,
bind).: 1,
clipboard_append(self,: 1,
Append: 1,
STRING: 3,
clipboard.: 2,
optional: 4,
displayof: 3,
keyword: 14,
target: 2,
display.: 5,
clipboard: 2,
retrieved: 1,
selection_get.: 1,
clipboard_clear(self,: 1,
Clear: 3,
data: 4,
clipboard_get(self,: 1,
Retrieve: 1,
window's: 1,
root: 16,
application.: 4,
type: 8,
form: 5,
should: 3,
atom: 3,
FILE_NAME.: 1,
Type: 1,
STRING,: 3,
except: 2,
X11,: 2,
UTF8_STRING: 2,
fall: 1,
STRING.: 2,
to:: 1,
selection_get(CLIPBOARD): 1,
columnconfigure: 1,
grid_columnconfigure(self,: 2,
index,: 4,
cnf={},: 10,
configure(self,: 1,
cnf=None,: 1,
Configure: 3,
resources: 4,
overview: 1,
allowed: 1,
deletecommand(self,: 1,
name): 2,
Internal: 1,
NAME.: 4,
event_add(self,: 1,
virtual,: 2,
*sequences): 2,
virtual: 11,
VIRTUAL: 2,
(of: 1,
<<Name>>): 1,
triggered: 1,
whenever: 1,
occurs.: 1,
event_delete(self,: 1,
Unbind: 3,
SEQUENCE.: 2,
event_generate(self,: 1,
sequence,: 1,
Generate: 1,
specify: 2,
(e.g.: 17,
y,: 1,
rootx,: 1,
rooty).: 1,
event_info(self,: 1,
virtual=None): 1,
information: 11,
VIRTUAL.: 1,
focus: 14,
focus_set(self): 2,
focus_displayof(self): 1,
currently: 8,
display: 6,
located.: 2,
focus.: 9,
focus_get(self): 1,
Use: 5,
focus_displayof: 1,
allow: 1,
working: 1,
displays.: 1,
focus_lastfor(self): 1,
would: 1,
top: 2,
level: 1,
gets: 2,
manager.: 2,
Direct: 1,
through: 1,
getboolean(self,: 1,
s): 3,
true: 6,
false: 1,
getdouble(self,: 1,
getint(self,: 1,
getvar(self,: 1,
name='PY_VAR'): 3,
variable: 3,
grab_current(self): 1,
grab: 6,
None.: 8,
grab_release(self): 1,
Release: 1,
set.: 1,
grab_set(self): 1,
directs: 2,
descendant: 2,
grab_set_global(self): 1,
global: 3,
caution: 1,
applications: 1,
anymore.: 1,
grab_status(self): 1,
"local": 1,
"global": 1,
no,: 1,
local: 1,
grab.: 1,
controls: 1,
grid: 3,
master: 13,
row/column: 1,
any: 3,
weight.: 1,
nw.: 1,
grid_bbox(self,: 1,
column=None,: 1,
row=None,: 2,
col2=None,: 1,
row2=None): 1,
bounding: 3,
box: 3,
controlled: 1,
geometry: 6,
manager: 2,
grid.: 6,
COLUMN,: 1,
ROW: 1,
applies: 1,
cell: 6,
column: 5,
cell.: 2,
COL2: 1,
ROW2: 1,
starts: 1,
integers: 1,
offset: 3,
upper: 10,
height.: 1,
INDEX: 2,
minsize: 2,
(minimum: 2,
column),: 1,
weight: 2,
(how: 4,
much: 4,
space: 4,
propagate: 3,
column): 1,
pad: 2,
let: 2,
additionally).: 2,
grid_location(self,: 2,
identify: 1,
pixel: 4,
X: 9,
Y: 2,
inside: 1,
grid_propagate(self,: 1,
flag=['_noarg_']): 3,
status: 2,
propagation: 2,
information.: 2,
slaves: 6,
setting: 2,
grid_rowconfigure(self,: 2,
row),: 1,
row): 1,
grid_size(self): 2,
rows: 2,
grid_slaves(self,: 1,
column=None): 1,
packing: 5,
order.: 8,
image_names(self): 1,
existing: 2,
image: 10,
names.: 1,
image_types(self): 1,
photo: 1,
bitmap).: 1,
keys(self): 1,
names: 3,
lift: 1,
tkraise(self,: 2,
aboveThis=None): 2,
lower(self,: 1,
belowThis=None): 1,
Lower: 1,
stacking: 3,
mainloop(self,: 1,
n=0): 1,
mainloop: 6,
Tk.: 1,
nametowidget(self,: 1,
option_add(self,: 1,
pattern,: 1,
value,: 10,
priority=None): 2,
VALUE: 1,
(second: 1,
parameter): 1,
option: 7,
PATTERN: 1,
(first: 1,
parameter).: 1,
third: 1,
priority: 2,
(defaults: 1,
80).: 1,
option_clear(self): 1,
database.: 2,
reloaded: 1,
option_add: 1,
option_get(self,: 1,
name,: 9,
className): 1,
CLASSNAME.: 1,
Values: 1,
higher: 3,
override: 1,
lower: 5,
option_readfile(self,: 1,
fileName,: 1,
Read: 1,
file: 1,
FILENAME: 1,
priority.: 1,
pack_propagate(self,: 2,
pack_slaves(self): 2,
place_slaves(self): 1,
quit(self): 1,
Quit: 1,
interpreter.: 1,
All: 1,
destroyed.: 2,
register: 6,
_register(self,: 1,
subst=None,: 1,
needcleanup=1): 1,
rowconfigure: 1,
selection_clear(self,: 1,
selection.: 5,
selection_get(self,: 1,
contents: 2,
selection: 11,
PRIMARY.: 1,
fetched,: 1,
defaulting: 1,
tried: 1,
selection_handle(self,: 1,
command,: 1,
Specify: 1,
COMMAND: 1,
owned: 1,
queried: 1,
OFFSET: 1,
LENGTH: 1,
allows: 1,
chunking: 1,
selections.: 1,
provided:: 2,
(default: 4,
PRIMARY),: 2,
FILE_NAME).: 2,
selection_own(self,: 1,
Become: 1,
owner: 2,
PRIMARY).: 1,
selection_own_get(self,: 1,
send(self,: 1,
interp,: 1,
cmd,: 1,
Send: 1,
CMD: 1,
interpreter: 1,
INTERP: 1,
executed.: 1,
setvar(self,: 1,
name='PY_VAR',: 1,
value='1'): 1,
VALUE.: 1,
tk_bisque(self): 1,
scheme: 2,
light: 1,
brown: 1,
3.6: 1,
before.: 1,
tk_focusFollowsMouse(self): 1,
under: 1,
Can: 1,
disabled: 1,
easily.: 1,
tk_focusNext(self): 1,
next: 3,
follows: 1,
goes: 1,
child,: 1,
then: 3,
children: 2,
child: 1,
recursively: 1,
sibling: 1,
omitted: 1,
takefocus: 1,
tk_focusPrev(self): 1,
tk_focusNext: 1,
details.: 1,
tk_setPalette(self,: 1,
elements.: 1,
single: 1,
cause: 2,
colors: 2,
this.: 1,
Alternatively: 1,
given.: 6,
keywords: 1,
valid:: 1,
activeBackground,: 1,
foreground,: 1,
selectColor,: 1,
activeForeground,: 1,
highlightBackground,: 1,
selectBackground,: 1,
highlightColor,: 1,
selectForeground,: 1,
disabledForeground,: 1,
insertBackground,: 1,
troughColor.: 1,
tk_strictMotif(self,: 1,
boolean=None): 1,
internal: 5,
variable,: 1,
look: 1,
feel: 1,
adhere: 2,
Motif.: 1,
Motif: 1,
passes: 1,
slider).: 1,
Returns: 1,
Raise: 1,
unbind_all(self,: 1,
sequence): 2,
functions.: 2,
unbind_class(self,: 1,
update(self): 2,
Enter: 2,
until: 6,
pending: 1,
been: 2,
Tcl.: 1,
update_idletasks(self): 1,
idle: 1,
callbacks: 1,
update: 5,
windows: 1,
process: 1,
caused: 1,
user.: 1,
wait_variable(self,: 2,
Wait: 3,
modified.: 1,
IntVar,: 1,
StringVar,: 1,
DoubleVar: 1,
BooleanVar: 1,
wait_visibility(self,: 1,
window=None): 2,
visibility: 1,
WIDGET: 2,
changes: 1,
appears).: 1,
self: 3,
wait_window(self,: 1,
waitvar: 1,
winfo_atom(self,: 1,
represents: 1,
winfo_atomname(self,: 1,
id,: 2,
winfo_cells(self): 1,
cells: 2,
colormap: 3,
winfo_children(self): 1,
winfo_class(self): 1,
winfo_colormapfull(self): 1,
request: 1,
full.: 1,
winfo_containing(self,: 1,
rootX,: 1,
rootY,: 1,
ROOTX,: 1,
ROOTY.: 1,
winfo_depth(self): 1,
bits: 2,
per: 2,
pixel.: 4,
winfo_exists(self): 1,
exists.: 1,
winfo_fpixels(self,: 1,
NUMBER: 1,
"3c"): 1,
float.: 1,
winfo_geometry(self): 1,
"widthxheight+X+Y".: 1,
winfo_height(self): 1,
height: 16,
winfo_id(self): 1,
ID: 1,
winfo_interps(self,: 1,
interpreters: 1,
winfo_ismapped(self): 1,
mapped.: 2,
winfo_manager(self): 1,
winfo_name(self): 1,
winfo_parent(self): 1,
winfo_pathname(self,: 1,
pathname: 1,
winfo_pixels(self,: 1,
Rounded: 1,
winfo_fpixels.: 1,
winfo_pointerx(self): 1,
pointer: 3,
window.: 14,
winfo_pointerxy(self): 1,
winfo_pointery(self): 1,
winfo_reqheight(self): 1,
requested: 2,
winfo_reqwidth(self): 1,
winfo_rgb(self,: 1,
color): 1,
decimal: 1,
green,: 1,
blue: 1,
COLOR: 1,
winfo_rootx(self): 1,
winfo_rooty(self): 1,
winfo_screen(self): 1,
winfo_screencells(self): 1,
winfo_screendepth(self): 1,
winfo_screenheight(self): 1,
winfo_screenmmheight(self): 1,
mm.: 2,
winfo_screenmmwidth(self): 1,
winfo_screenvisual(self): 1,
directcolor,: 2,
grayscale,: 2,
pseudocolor,: 2,
staticcolor,: 2,
staticgray,: 2,
truecolor: 2,
colormodel: 2,
winfo_screenwidth(self): 1,
winfo_server(self): 1,
X-Server: 1,
"XmajorRminor: 1,
vendor: 1,
vendorVersion".: 1,
winfo_toplevel(self): 1,
toplevel: 1,
winfo_viewable(self): 1,
ancestors: 1,
winfo_visual(self): 1,
winfo_visualid(self): 1,
winfo_visualsavailable(self,: 1,
includeids=False): 1,
visuals: 1,
Each: 1,
item: 1,
consists: 1,
winfo_visual),: 1,
depth: 1,
includeids: 1,
also: 2,
identifier.: 1,
winfo_vrootheight(self): 1,
pixels.: 1,
winfo_vrootwidth(self): 1,
winfo_vrootx(self): 1,
relative: 7,
winfo_vrooty(self): 1,
winfo_width(self): 1,
winfo_x(self): 1,
parent.: 2,
winfo_y(self): 1,
tkinter.Pack:: 1,
forget: 1,
pack_forget(self): 2,
pack_info(self): 2,
pack: 4,
pack_configure(self,: 2,
Pack: 1,
options:: 3,
after=widget: 1,
you: 5,
packed: 1,
anchor=NSEW: 2,
(or: 2,
subset): 2,
before=widget: 1,
expand=bool: 1,
expand: 1,
grows: 2,
fill=NONE: 1,
BOTH: 1,
fill: 2,
in=master: 3,
contain: 2,
in_=master: 3,
'in': 3,
description: 3,
ipadx=amount: 2,
padding: 8,
ipady=amount: 2,
padx=amount: 2,
pady=amount: 2,
side=TOP: 1,
BOTTOM: 1,
LEFT: 1,
RIGHT: 1,
Unmap: 4,
options: 3,
tkinter.Place:: 1,
place_configure(self,: 2,
Place: 1,
placed: 1,
x=amount: 1,
locate: 4,
y=amount: 1,
relx=amount: 1,
(1.0: 4,
edge): 2,
rely=amount: 1,
bottom: 2,
width=amount: 1,
height=amount: 1,
relwidth=amount: 1,
master): 2,
relheight=amount: 1,
bordermode="inside": 1,
"outside": 1,
take: 1,
border: 1,
account: 1,
place_forget(self): 1,
place_info(self): 1,
placing: 1,
tkinter.Grid:: 1,
grid_configure(self,: 2,
Position: 1,
column=number: 1,
(starting: 2,
columnspan=number: 1,
span: 2,
columns: 1,
row=number: 1,
rowspan=number: 1,
sticky=NSEW: 1,
larger: 1,
sides: 1,
stick: 1,
boundary: 1,
grid_forget(self): 1,
grid_info(self): 1,
positioning: 1,
grid_remove(self): 1,
remember: 1,
options.: 1,
Shape(builtins.object): 1,
Shape(type_,: 1,
data=None): 2,
structure: 1,
modeling: 1,
attribute: 2,
_type: 2,
"polygon",: 1,
"image",: 1,
"compound": 1,
_data: 1,
depending: 1,
poygon-tuple,: 1,
constructed: 1,
addcomponent: 1,
method.: 3,
type_,: 1,
addcomponent(self,: 1,
poly,: 1,
fill,: 1,
Add: 1,
component: 1,
compound.: 1,
poly: 2,
component,: 1,
component.: 1,
Shapeobject: 1,
namend: 1,
s):: 1,
s.addcomponent(((0,0),: 1,
(10,10),: 4,
(-10,10)),: 1,
"red",: 2,
"blue"): 2,
((0,0),(10,-5),(0,10),(-10,-5)): 1,
Shape("compound"): 1,
s.addcomponent(poly,: 1,
components: 2,
register_shape(): 1,
Terminator(builtins.Exception): 1,
Will: 1,
raised: 1,
TurtleScreen.update,: 1,
_RUNNING: 1,
becomes: 1,
stops: 1,
execution: 1,
script.: 2,
Main: 1,
purpose:: 1,
Demo-Viewer: 1,
turtle.Demo.py.: 1,
builtins.Exception: 1,
builtins.BaseException: 1,
builtins.Exception:: 2,
/,: 1,
Static: 2,
__new__(*args,: 1,
builtins.type: 1,
help(type): 2,
builtins.BaseException:: 2,
__delattr__(self,: 1,
/): 19,
Implement: 3,
delattr(self,: 1,
name).: 3,
__getattribute__(self,: 2,
getattr(self,: 2,
__reduce__(...): 1,
Helper: 1,
pickle.: 1,
__repr__(self,: 1,
__setattr__(self,: 1,
setattr(self,: 1,
value).: 1,
__setstate__(...): 1,
__str__(self,: 1,
str(self).: 1,
with_traceback(...): 1,
Exception.with_traceback(tb): 1,
self.__traceback__: 1,
tb: 1,
__cause__: 1,
exception: 2,
__context__: 1,
context: 1,
__suppress_context__: 1,
__traceback__: 1,
args: 1,
Turtle(shape='classic',: 1,
TurtleScreen(TurtleScreenBase): 1,
TurtleScreen(cv,: 1,
mode='standard',: 2,
colormode=1.0,: 2,
delay=10): 2,
Provides: 2,
oriented: 1,
setbg: 1,
etc.: 1,
relies: 1,
TurtleScreenBase: 2,
underlying: 1,
toolkit: 1,
case.: 1,
cv,: 1,
addshape: 1,
register_shape(self,: 2,
shape=None): 4,
bgcolor(self,: 1,
backgroundcolor: 4,
Arguments: 2,
given):: 2,
three: 2,
3-tuple: 2,
screen):: 20,
screen.bgcolor("orange"): 1,
screen.bgcolor(): 2,
'orange': 2,
screen.bgcolor(0.5,0,0.5): 1,
'#800080': 2,
bgpic(self,: 1,
picname=None): 1,
backgroundimage.: 4,
picname: 8,
gif-file: 5,
"nopic".: 2,
filename,: 2,
background.: 2,
"nopic",: 2,
backgroundimage,: 4,
filename: 4,
screen.bgpic(): 2,
'nopic': 2,
screen.bgpic("landscape.gif"): 1,
'landscape.gif': 2,
Reset: 4,
initial: 4,
state:: 2,
white: 2,
eventbindings: 2,
tracing: 2,
screen.clear(): 1,
Note:: 2,
clearscreen: 1,
colormode(self,: 1,
cmode=None): 1,
255.: 2,
cmode: 2,
colortriples: 2,
0..cmode.: 2,
screen.colormode(): 1,
screen.colormode(255): 1,
pencolor(240,160,80): 2,
delay(self,: 1,
delay=None): 3,
delay: 10,
screen.delay(15): 1,
screen.delay(): 1,
getcanvas(self): 1,
Screen: 3,
cv: 4,
screen.getcanvas(): 1,
<turtle.ScrolledCanvas: 2,
0x010742D8>: 2,
getshapes(self): 1,
screen.getshapes(): 1,
['arrow',: 2,
'blank',: 2,
,: 2,
'turtle']: 2,
listen(self,: 1,
xdummy=None,: 1,
ydummy=None): 2,
(in: 2,
collect: 2,
key-events): 2,
Dummy: 2,
able: 7,
pass: 2,
listen: 2,
onclick: 2,
screen.listen(): 3,
mode(self,: 1,
mode=None): 1,
turtle-mode: 2,
('standard',: 2,
'logo': 10,
'world'): 2,
perform: 2,
reset.: 3,
mode: 13,
'standard',: 2,
'world': 8,
Mode: 8,
turtle.py.: 2,
Logo-Turtle-Graphics.: 2,
userdefined: 2,
'worldcoordinates'.: 2,
*Attention*:: 2,
angles: 6,
appear: 5,
distorted: 2,
x/y: 2,
unit-ratio: 2,
doesn't: 2,
equal: 2,
1.: 2,
Initial: 2,
------------|-------------------------|-------------------: 2,
(east): 2,
upward: 2,
(north): 2,
Examples:: 14,
mode('logo'): 2,
resets: 2,
mode(): 2,
mouse-button,: 2,
screen): 2,
screen.onclick(goto): 1,
screen.onclick(None): 1,
onkey(self,: 2,
key-release: 3,
key.: 5,
key: 17,
string:: 5,
"a"): 5,
key-symbol: 5,
"space"): 5,
In: 6,
key-events,: 5,
listen.): 5,
f():: 7,
fd(50): 14,
lt(60): 7,
screen.onkey(f,: 1,
"Up"): 5,
repeatedly: 5,
pressing: 5,
up-arrow: 7,
consequently: 5,
hexagon: 3,
onkeypress(self,: 1,
key=None): 2,
key-press: 2,
key-press-event: 2,
screen.onkeypress(f,: 1,
keeping: 2,
pressed: 2,
hexagon.: 2,
onkeyrelease: 1,
onscreenclick: 1,
ontimer(self,: 1,
t=0): 2,
Install: 2,
timer,: 2,
calls: 2,
t: 4,
running: 4,
running:: 2,
screen.ontimer(f,: 1,
250): 2,
f(): 2,
marching: 2,
Adds: 3,
shapelist.: 3,
(1): 3,
Installs: 9,
!!: 6,
Image-shapes: 3,
rotate: 4,
they: 3,
turtle!: 3,
(2): 3,
arbitrary: 6,
pairs: 3,
coordinates.: 5,
(3): 3,
(compound): 3,
shape,: 3,
issue: 3,
shape(shapename).: 3,
register_shape("turtle.gif"): 3,
register_shape("tri",: 3,
((0,0),: 3,
(-10,10))): 3,
screen.register_shape("triangle",: 1,
((5,-3),(0,5),(-5,-3))): 3,
state.: 2,
screen.reset(): 1,
resetscreen: 1,
screensize(self,: 1,
Resize: 2,
canvwidth: 2,
canvheight: 2,
bg: 2,
color-tuple,: 2,
(canvaswidth,: 2,
canvasheight): 2,
alter: 2,
observe: 2,
hidden: 2,
parts: 4,
scrollbars.: 2,
(Can: 4,
visible: 2,
were: 2,
outside: 2,
before!): 2,
turtle.screensize(2000,1500): 2,
search: 2,
erroneously: 2,
escaped: 2,
;-): 2,
setworldcoordinates(self,: 1,
llx,: 1,
lly,: 2,
urx,: 2,
ury): 2,
coordinate-system.: 2,
llx: 2,
x-coordinate: 4,
lly: 2,
y-coordinate: 4,
urx: 2,
ury: 2,
coodinat-system: 2,
switch: 3,
necessary.: 2,
performs: 2,
screen.reset.: 1,
already: 2,
active,: 2,
redrawn: 2,
But: 2,
ATTENTION:: 2,
user-defined: 2,
coordinatesystems: 2,
may: 2,
distorted.: 2,
Screen.mode()): 2,
screen.setworldcoordinates(-10,-0.5,50,1.5): 1,
_: 2,
range(36):: 2,
left(10): 2,
forward(0.5): 2,
tracer(self,: 1,
n=None,: 1,
Turns: 2,
on/off: 2,
drawings.: 2,
nonnegative: 4,
n-th: 2,
really: 2,
performed.: 2,
accelerate: 2,
complex: 2,
graphics.): 2,
Second: 2,
sets: 4,
RawTurtle.delay()): 2,
screen.tracer(8,: 1,
25): 2,
dist: 4,
2: 5,
range(200):: 2,
fd(dist): 2,
rt(90): 2,
+=: 2,
turtles(self): 1,
screen.turtles(): 1,
0x00E11FB0>]: 2,
Perform: 2,
update.: 2,
window_height(self): 1,
screen.window_height(): 1,
480: 2,
window_width(self): 1,
screen.window_width(): 1,
640: 2,
TurtleScreenBase:: 2,
mainloop(self): 1,
Starts: 3,
Tkinter's: 3,
Must: 6,
statement: 3,
program.: 3,
script: 4,
(No: 3,
subprocess): 4,
interactive: 3,
screen.mainloop(): 1,
numinput(self,: 1,
title,: 2,
prompt,: 2,
default=None,: 2,
minval=None,: 2,
maxval=None): 2,
Pop: 4,
dialog: 14,
number.: 2,
title: 9,
window,: 4,
prompt: 4,
mostly: 4,
describing: 4,
what: 4,
numerical: 2,
input.: 6,
default:: 2,
minval:: 2,
minimum: 2,
maxval:: 2,
minval: 2,
maxval: 2,
not,: 2,
hint: 2,
issued: 2,
open: 2,
correction.: 2,
canceled,: 4,
screen.numinput("Poker",: 1,
"Your: 2,
stakes:",: 2,
1000,: 2,
minval=10,: 2,
maxval=10000): 2,
textinput(self,: 1,
prompt): 2,
screen.textinput("NIM",: 1,
"Name: 2,
player:"): 2,
Vec2D(builtins.tuple): 1,
Vec2D(x,: 1,
dimensional: 1,
vector: 4,
helper: 1,
implementing: 1,
also.: 1,
Derived: 1,
tuple,: 1,
tuple!: 1,
a,: 1,
vectors,: 1,
k: 1,
number):: 1,
a+b: 1,
addition: 1,
a-b: 1,
subtraction: 1,
a*b: 1,
inner: 1,
product: 1,
k*a: 1,
a*k: 1,
multiplication: 1,
scalar: 1,
|a|: 1,
a.rotate(angle): 1,
rotation: 1,
builtins.tuple: 1,
__abs__(self): 1,
__add__(self,: 1,
other): 4,
self+value.: 1,
__getnewargs__(self): 1,
__mul__(self,: 1,
self*value.: 1,
__neg__(self): 1,
__rmul__(self,: 1,
value*self.: 1,
__sub__(self,: 1,
rotate(self,: 1,
__new__(cls,: 1,
builtins.tuple:: 1,
__contains__(self,: 1,
__eq__(self,: 1,
self==value.: 1,
__ge__(self,: 1,
self>=value.: 1,
__getitem__(self,: 1,
self[key].: 1,
__gt__(self,: 1,
self>value.: 1,
__hash__(self,: 1,
hash(self).: 1,
__iter__(self,: 1,
iter(self).: 1,
__le__(self,: 1,
self<=value.: 1,
__len__(self,: 1,
len(self).: 1,
__lt__(self,: 1,
self<value.: 1,
__ne__(self,: 1,
self!=value.: 1,
count(self,: 1,
occurrences: 1,
start=0,: 1,
stop=9223372036854775807,: 1,
index: 1,
Raises: 1,
ValueError: 1,
FUNCTIONS: 1,
Screen(): 1,
singleton: 1,
exists: 1,
moment,: 1,
create: 1,
it,: 1,
one.: 1,
addshape(name,: 1,
register_shape("triangle",: 2,
back(distance): 1,
position(): 19,
backward(30): 3,
backward(distance): 1,
begin_fill(): 4,
color("black",: 2,
circle(60): 2,
end_fill(): 3,
begin_poly(): 2,
bgcolor(*args): 1,
bgcolor("orange"): 1,
bgcolor(): 2,
bgcolor(0.5,0,0.5): 1,
bgpic(picname=None): 1,
bgpic(): 2,
bgpic("landscape.gif"): 1,
bk(distance): 1,
bye(): 3,
Shut: 1,
turtlegraphics: 1,
circle(50): 1,
circle(120,: 1,
clear(): 3,
clearscreen(): 1,
clearstamp(stampid): 1,
color("blue"): 2,
clearstamp(astamp): 1,
clearstamps(n=None): 1,
stamp();: 1,
fd(30): 1,
clearstamps(2): 1,
clearstamps(-2): 1,
clearstamps(): 1,
clone(): 1,
color(*args): 1,
color('red',: 1,
colormode(cmode=None): 1,
colormode(): 1,
degrees(fullcircle=360.0): 1,
left(90): 1,
heading(): 18,
degrees(400.0): 1,
delay(delay=None): 1,
delay(15): 1,
delay(): 1,
distance(30,40): 1,
distance(pen): 1,
done: 1,
mainloop(): 4,
dot(size=None,: 1,
dot(): 1,
fd(50);: 2,
dot(20,: 1,
down(): 1,
pendown(): 5,
end_poly(): 2,
exitonclick(): 2,
Go: 1,
clicked.: 1,
mouseclick: 1,
"using_IDLE": 1,
value),: 1,
enter: 1,
mainloop.: 1,
(no: 1,
used,: 1,
turtle.cfg.: 1,
case: 1,
IDLE's: 1,
active: 1,
client: 1,
Screen-class: 1,
instances.: 1,
fd(distance): 1,
forward(25): 2,
forward(-75): 2,
fillcolor(*args): 1,
fillcolor('violet'): 1,
fillcolor(col): 1,
fillcolor(0,: 1,
filling(): 1,
filling():: 1,
pensize(5): 1,
pensize(3): 1,
forward(distance): 1,
get_poly(): 2,
register_shape("myFavouriteShape",: 1,
get_shapepoly(): 2,
shape("square"): 2,
shapetransform(4,: 1,
getcanvas(): 2,
getpen(): 1,
<Turtle: 2,
[<Turtle: 2,
getscreen(): 2,
<TurtleScreen: 1,
getshapes(): 2,
setpos(60,30): 3,
setpos((20,80)): 3,
setpos(tp): 3,
left(67): 1,
hideturtle(): 6,
home(): 2,
ht(): 1,
isdown(): 3,
penup(): 6,
isvisible(): 1,
isvisible():: 1,
left(angle): 1,
left(45): 2,
listen(xdummy=None,: 1,
listen(): 4,
lt(angle): 1,
mode(mode=None): 1,
numinput(title,: 1,
numinput("Poker",: 1,
onclick(fun,: 1,
ondrag(fun,: 1,
ondrag(goto): 1,
onkey(fun,: 1,
onkey(f,: 2,
onkeypress(fun,: 1,
onkeypress(f,: 1,
onkeyrelease(fun,: 1,
onrelease(fun,: 1,
onscreenclick(fun,: 1,
onclick(goto): 1,
ontimer(fun,: 1,
ontimer(f,: 1,
pd(): 1,
pen(pen=None,: 1,
pen(fillcolor="black",: 1,
pen(): 2,
penstate=pen(): 1,
color("yellow",""): 1,
pencolor(*args): 1,
pencolor('brown'): 1,
pencolor(tup): 1,
pensize(width=None): 1,
pensize(): 2,
pensize(10): 2,
pu(): 1,
register_shape(name,: 1,
resetscreen(): 1,
resizemode(rmode=None): 1,
resizemode("noresize"): 1,
resizemode(): 1,
right(angle): 1,
right(45): 2,
rt(angle): 1,
screensize(canvwidth=None,: 1,
seth(to_angle): 1,
setheading(90): 2,
setheading(to_angle): 1,
setpos(x,: 1,
setposition(x,: 1,
settiltangle(angle): 1,
shape("circle"): 4,
shapesize(5,2): 4,
settiltangle(45): 1,
settiltangle(-45): 1,
setundobuffer(size): 1,
setundobuffer(42): 1,
setup(width=0.5,: 1,
height=0.75,: 1,
startx=None,: 2,
starty=None): 2,
width:: 1,
pixels,: 3,
float: 2,
fraction: 2,
50%: 2,
height:: 1,
75%: 2,
startx:: 1,
edge: 4,
negative: 2,
Default,: 2,
startx=None: 1,
horizontally.: 1,
starty:: 1,
starty=None: 1,
vertically.: 1,
setup: 1,
(width=200,: 1,
height=200,: 1,
startx=0,: 1,
starty=0): 1,
200x200: 1,
setup(width=.75,: 1,
height=0.5,: 1,
centers: 1,
setworldcoordinates(llx,: 1,
setworldcoordinates(-10,-0.5,50,1.5): 1,
setx(x): 1,
setx(10): 1,
sety(y): 1,
sety(-10): 1,
shape(name=None): 1,
shape(): 2,
shape("turtle"): 1,
shapesize(stretch_wid=None,: 1,
shapesize(5,: 2,
shapesize(outline=8): 2,
shapetransform(t11=None,: 1,
shapesize(4,2): 1,
shearfactor(-0.5): 1,
shapetransform(): 1,
shearfactor(shear=None): 1,
shearfactor(0.5): 1,
shearfactor(): 1,
showturtle(): 3,
speed(speed=None): 1,
speed(3): 1,
st(): 1,
textinput(title,: 1,
textinput("NIM",: 1,
tilt(angle): 1,
tilt(30): 2,
tiltangle(angle=None): 1,
tilt(45): 1,
tiltangle(): 1,
title(titlestring): 1,
turtle-window: 1,
titlestring: 1,
titlebar: 1,
Screen-class.: 1,
Not: 1,
TurtleScreen-: 1,
title("Welcome: 1,
turtle-zoo!"): 1,
towards(x,: 1,
towards(0,0): 1,
tracer(n=None,: 1,
tracer(8,: 1,
turtlesize(stretch_wid=None,: 1,
lt(80): 1,
undobufferentries(): 1,
up(): 1,
update(): 1,
width(width=None): 1,
window_height(): 2,
window_width(): 2,
write(arg,: 1,
write('Home: 1,
write((0,0),: 1,
write_docstringdict(filename='turtle_docstringdict'): 1,
docstring-dictionary: 1,
turtle_docstringdict: 1,
Has: 1,
explicitly,: 1,
(not: 1,
turtle-graphics: 1,
classes): 1,
<filname>.py: 1,
intended: 1,
translation: 1,
languages.: 1,
xcor(): 2,
left(60): 2,
forward(100): 2,
ycor(): 2,
DATA: 1,
__all__: 1,
['ScrolledCanvas',: 1,
'TurtleScreen',: 1,
'Screen',: 1,
'RawTurtle',: 1,
'T...: 1,
FILE: 1,
c:\users\student\appdata\local\programs\python\python38\lib\turtle.py: 1,
